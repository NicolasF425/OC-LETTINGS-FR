name: Django CI, Docker Build & Deploy to Render

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        env:
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            DEBUG: 'False'
        run: |
          echo "SECRET_KEY is: $SECRET_KEY"
        run: |
          python manage.py test

      - name: Check secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "❌ DOCKER_USERNAME manquant"
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "❌ DOCKER_PASSWORD manquant"
            exit 1
          fi
          echo "✅ Les secrets existent"

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/oclettings:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/oclettings:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Trigger Render Deploy
        id: deploy
        run: |
          response=$(curl -s -o response.json -w "%{http_code}" \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys)

          echo "HTTP response code: $response"
          if [ "$response" -ne 201 ]; then
            echo "Deploy failed"
            exit 1
          fi

      - name: Rollback if deploy fails
        if: failure()
        run: |
          echo "⚠️ Deploy failed, rolling back to previous image..."
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"image":{"url":"docker.io/${{ secrets.DOCKER_USERNAME }}/monapp:latest"}}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
